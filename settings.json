{
  // Vim Extension Settings
  "vim.leader": "<Space>",
  "vim.foldfix": true,
  "vim.highlightedyank.color": "rgba(230, 97, 89, 0.7)",
  "vim.highlightedyank.enable": true,
  "vim.highlightedyank.textColor": "white",
  "vim.hlsearch": true,
  "vim.useSystemClipboard": true,
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["<Leader>", "v", "i", "i"],
      "commands": ["workbench.action.increaseViewSize"]
    },
    {
      "before": ["<Leader>", "v", "d", "d"],
      "commands": ["workbench.action.decreaseViewSize"]
    },
    {
      "before": ["<Leader>", "v", "i", "h"],
      "commands": ["workbench.action.increaseViewHeight"]
    },
    {
      "before": ["<Leader>", "v", "d", "h"],
      "commands": ["workbench.action.decreaseViewHeight"]
    },
    {
      "before": ["<Leader>", "t", "t"],
      "commands": ["workbench.action.files.newUntitledFile"]
    },
    {
      "before": ["<Leader>", "t", "n"],
      "commands": ["workbench.action.nextEditor"]
    },
    {
      "before": ["<Leader>", "t", "N"],
      "commands": ["workbench.action.previousEditor"]
    },
    {
      "before": ["<Leader>", "v", "g", "j"],
      "commands": ["workbench.action.moveActiveEditorGroupDown"]
    },
    {
      "before": ["<Leader>", "v", "g", "h"],
      "commands": ["workbench.action.moveActiveEditorGroupLeft"]
    },
    {
      "before": ["<Leader>", "v", "g", "l"],
      "commands": ["workbench.action.moveActiveEditorGroupRight"]
    },
    {
      "before": ["<Leader>", "v", "g", "k"],
      "commands": ["workbench.action.moveActiveEditorGroupUp"]
    },
    {
      "before": ["<Leader>", "v", "i", "f"],
      "commands": ["workbench.action.moveEditorToFirstGroup"]
    },
    {
      "before": ["<Leader>", "v", "i", "l"],
      "commands": ["workbench.action.moveEditorToLastGroup"]
    },
    {
      "before": ["<Leader>", "v", "i", "n"],
      "commands": ["workbench.action.moveEditorToNextGroup"]
    },
    {
      "before": ["<Leader>", "v", "i", "p"],
      "commands": ["workbench.action.moveEditorToPreviousGroup"]
    },
    {
      "before": ["<Leader>", "v", "e", "h"],
      "commands": ["workbench.action.moveEditorLeftInGroup"]
    },
    {
      "before": ["<Leader>", "v", "e", "l"],
      "commands": ["workbench.action.moveEditorRightInGroup"]
    },
    {
      "before": ["<Leader>", "c", "e", "g"],
      "commands": ["workbench.action.closeEditorsAndGroup"]
    },
    {
      "before": ["<Leader>", "c", "o", "e"],
      "commands": ["workbench.action.closeOtherEditors"]
    },
    {
      "before": ["<Leader>", "c", "e", "o"],
      "commands": ["workbench.action.closeEditorsInOtherGroups"]
    },
    {
      "before": ["<Leader>", "s", "h"],
      "commands": ["workbench.action.splitEditorLeft"]
    },
    {
      "before": ["<Leader>", "s", "j"],
      "commands": ["workbench.action.splitEditorDown"]
    },
    {
      "before": ["<Leader>", "s", "k"],
      "commands": ["workbench.action.splitEditorUp"]
    },
    {
      "before": ["<Leader>", "s", "l"],
      "commands": ["workbench.action.splitEditorRight"]
    },
    // Leader keybindings for window focus management
    // Leader keybindings for editor actions
    { "before": ["leader", "r"], "commands": ["editor.action.rename"] },
    { "before": ["leader", "w"], "commands": [":w!"] },
    { "before": ["leader", "q"], "commands": [":q!"] },
    { "before": ["leader", "x"], "commands": [":x!"] },
    // Other keybindings
    { "after": ["g", "g", "V", "G"], "before": ["<c-a>"] },
    { "before": ["<leader>", "k"], "commands": ["editor.action.showHover"] },
    {
      "before": ["<leader>", "c", "a"],
      "commands": ["editor.action.quickFix"]
    },
    { "after": ["^"], "before": ["H"] },
    { "after": ["$"], "before": ["L"] },
    {
      "before": ["<Leader>", "p"],
      "commands": ["workbench.action.showCommands"]
    },
    {
      "before": ["<Leader>", "e", "f"],
      "commands": ["workbench.explorer.fileView.focus"]
    },
    {
      "before": ["<Leader>", "f", "d"],
      "commands": ["editor.action.formatDocument"]
    },
    {
      "before": ["<Leader>", "f", "b"],
      "commands": ["breadcrumbs.focusAndSelect"]
    },
    {
      "before": ["<Leader>", "a"],
      "commands": ["editor.action.quickFix"]
    },
    {
      "before": ["<Leader>", "o"],
      "commands": ["workbench.action.quickOpen"]
    },
    { "before": ["leader", "i"], "commands": ["extension.toggleBool"] },
    {
      "before": ["leader", "g", "g"],
      "commands": ["workbench.scm.focus"]
    },
    {
      "before": ["leader", "g", "t", "l"],
      "commands": ["timeline.focus"]
    },
    {
      "before": ["leader", "g", "i", "r"],
      "commands": ["git.init"]
    },
    {
      "before": ["leader", "g", "a", "i"],
      "commands": ["git.ignore"]
    },
    {
      "before": ["leader", "g", "p", "g"],
      "commands": ["github.publish"]
    },
    {
      "before": ["leader", "g", "a", "r"],
      "commands": ["git.addRemote"]
    },
    {
      "before": ["leader", "g", "r", "r"],
      "commands": ["git.removeRemote"]
    },
    {
      "before": ["leader", "g", "s", "c"],
      "commands": ["git.stage"]
    },
    {
      "before": ["leader", "g", "s", "a", "c"],
      "commands": ["git.stageAll"]
    },
    {
      "before": ["leader", "g", "s", "a", "m"],
      "commands": ["git.stageAllMerge"]
    },
    {
      "before": ["leader", "g", "s", "a", "t"],
      "commands": ["git.stageAllTracked"]
    },
    {
      "before": ["leader", "g", "s", "a", "u"],
      "commands": ["git.stageAllUntracked"]
    },
    {
      "before": ["leader", "g", "u", "c"],
      "commands": ["git.unstage"]
    },
    {
      "before": ["leader", "g", "u", "a", "c"],
      "commands": ["git.unstageAll"]
    },
    {
      "before": ["leader", "g", "c", "c"],
      "commands": ["git.commit"]
    },
    {
      "before": ["leader", "g", "c", "a"],
      "commands": ["git.commitAll"]
    },
    {
      "before": ["leader", "g", "c", "s"],
      "commands": ["git.commitStaged"]
    },
    {
      "before": ["leader", "g", "c", "e"],
      "commands": ["git.commitEmpty"]
    },
    {
      "before": ["leader", "g", "u", "l", "c"],
      "commands": ["git.undoCommit"]
    },
    {
      "before": ["leader", "g", "p", "h"],
      "commands": ["git.push"]
    },
    {
      "before": ["leader", "g", "p", "f"],
      "commands": ["git.pushForce"]
    },
    {
      "before": ["leader", "g", "p", "b", "t"],
      "commands": ["git.pushTo"]
    },
    {
      "before": ["leader", "g", "p", "b", "t", "f"],
      "commands": ["git.pushToForce"]
    },
    {
      "before": ["leader", "g", "p", "l"],
      "commands": ["git.pull"]
    },
    {
      "before": ["leader", "g", "P", "f"],
      "commands": ["git.pullFrom"]
    },
    {
      "before": ["leader", "g", "P", "r"],
      "commands": ["git.pullRebase"]
    },
    {
      "before": ["leader", "g", "A", "r"],
      "commands": ["git.rebaseAbort"]
    },
    {
      "before": ["leader", "g", "c", "b"],
      "commands": ["git.branch"]
    },
    {
      "before": ["leader", "g", "c", "b", "f"],
      "commands": ["git.branchFrom"]
    },
    {
      "before": ["leader", "g", "d", "b"],
      "commands": ["git.deleteBranch"]
    },
    {
      "before": ["leader", "g", "m", "b"],
      "commands": ["git.merge"]
    },
    {
      "before": ["leader", "g", "p", "b"],
      "commands": ["git.publish"]
    },
    {
      "before": ["leader", "g", "r", "b"],
      "commands": ["git.renameBranch"]
    },
    {
      "before": ["leader", "g", "R", "b"],
      "commands": ["git.rebase"]
    },
    {
      "before": ["leader", "g", "C"],
      "commands": ["git.checkout"]
    },
    {
      "before": ["leader", "g", "C", "d"],
      "commands": ["git.checkoutDetached"]
    },
    {
      "before": ["leader", "g", "c", "p"],
      "commands": ["git.cherryPick"]
    },
    {
      "before": ["leader", "g", "d", "c"],
      "commands": ["git.clean"]
    },
    {
      "before": ["leader", "g", "d", "a", "c"],
      "commands": ["git.cleanAll"]
    },
    {
      "before": ["leader", "g", "d", "a", "t"],
      "commands": ["git.cleanAllTracked"]
    },
    {
      "before": ["leader", "g", "d", "a", "u"],
      "commands": ["git.cleanAllUntracked"]
    },
    {
      "before": ["leader", "g", "s", "s"],
      "commands": ["git.stash"]
    },
    {
      "before": ["leader", "g", "s", "i", "u"],
      "commands": ["git.stashIncludeUntracked"]
    },
    {
      "before": ["leader", "g", "a", "s"],
      "commands": ["git.stashApply"]
    },
    {
      "before": ["leader", "g", "a", "l", "s"],
      "commands": ["git.stashApplyLatest"]
    },
    {
      "before": ["leader", "g", "d", "s"],
      "commands": ["git.stashDrop"]
    },
    {
      "before": ["leader", "g", "p", "s"],
      "commands": ["git.stashPop"]
    },
    {
      "before": ["leader", "g", "p", "l", "s"],
      "commands": ["git.stashPopLatest"]
    },
    {
      "before": ["leader", "g", "c", "t"],
      "commands": ["git.createTag"]
    },
    {
      "before": ["leader", "g", "d", "t"],
      "commands": ["git.deleteTag"]
    },
    {
      "before": ["leader", "g", "p", "t"],
      "commands": ["git.pushTags"]
    },
    {
      "before": ["leader", "g", "f", "f"],
      "commands": ["git.fetch"]
    },
    {
      "before": ["leader", "g", "f", "p"],
      "commands": ["git.fetchPrune"]
    },
    {
      "before": ["leader", "g", "f", "f", "a", "r"],
      "commands": ["git.fetchAll"]
    },
    {
      "before": ["leader", "g", "o", "c"],
      "commands": ["git.openChange"]
    },
    {
      "before": ["leader", "g", "o", "f"],
      "commands": ["git.openFile"]
    },
    {
      "before": ["leader", "g", "s", "n"],
      "commands": ["editor.action.dirtydiff.next"]
    },
    {
      "before": ["leader", "g", "s", "N"],
      "commands": ["editor.action.dirtydiff.previous"]
    },
    {
      "before": ["leader", "g", "m", "n"],
      "commands": ["workbench.action.editor.nextChange"]
    },
    {
      "before": ["leader", "g", "m", "N"],
      "commands": ["workbench.action.editor.previousChange"]
    },
    {
      "before": ["leader", "g", "c", "n"],
      "commands": ["workbench.action.compareEditor.nextChange"]
    },
    {
      "before": ["leader", "g", "c", "N"],
      "commands": ["workbench.action.compareEditor.previousChange"]
    },
    {
      "before": ["leader", "g", "i", "v"],
      "commands": ["toggle.diff.renderSideBySide"]
    },
    {
      "before": ["leader", "m", "c", "b"],
      "commands": ["merge-conflict.accept.both"]
    },
    {
      "before": ["leader", "m", "c", "c"],
      "commands": ["merge-conflict.accept.current"]
    },
    {
      "before": ["leader", "m", "c", "i"],
      "commands": ["merge-conflict.accept.incoming"]
    },
    {
      "before": ["leader", "m", "c", "a", "b"],
      "commands": ["merge-conflict.accept.all-both"]
    },
    {
      "before": ["leader", "m", "c", "a", "c"],
      "commands": ["merge-conflict.accept.all-current"]
    },
    {
      "before": ["leader", "m", "c", "a", "i"],
      "commands": ["merge-conflict.accept.all-incoming"]
    },
    {
      "before": ["leader", "m", "c", "o"],
      "commands": ["merge-conflict.compare"]
    },
    {
      "before": ["leader", "m", "c", "n"],
      "commands": ["merge-conflict.next"]
    },
    {
      "before": ["leader", "m", "c", "N"],
      "commands": ["merge-conflict.previous"]
    }
  ],

  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["<Leader>", "a"],
      "commands": ["editor.action.quickFix"]
    },
    {
      "before": ["<Leader>", "s"],
      "commands": ["workbench.action.toggleSidebarVisibility"]
    },
    {
      "before": ["<Leader>", "d"],
      "commands": ["editor.action.duplicateSelection"]
    },
    {
      "before": ["<Leader>", "f"],
      "commands": ["editor.action.formatSelection"]
    },
    {
      "before": ["<Leader>", "u"],
      "commands": ["editor.action.transformToTitlecase"]
    },
    {
      "before": ["<Leader>", "i"],
      "commands": ["workbench.action.toggleEditorWidths"]
    },
    {
      "before": ["<Leader>", "o"],
      "commands": ["workbench.action.quickOpen"]
    },
    {
      "before": ["<Leader>", "p"],
      "commands": ["workbench.action.showCommands"]
    },
    {
      "before": ["<C-j>"],
      "commands": ["editor.action.moveLinesDownAction"]
    },
    {
      "before": ["<C-k>"],
      "commands": ["editor.action.moveLinesUpAction"]
    }
  ],

  // Terminal and Shell Settings
  "terminal.integrated.defaultProfile.windows": "Git Bash",

  // Workbench and UI Settings
  "workbench.colorTheme": "Atom One Dark",
  "workbench.sideBar.location": "right",
  "workbench.layoutControl.enabled": false,
  "window.menuBarVisibility": "compact",
  "window.commandCenter": false,
  // Editor Settings
  "editor.minimap.enabled": false,
  "editor.lineNumbers": "relative",
  "editor.formatOnSave": true,
  "editor.suggest.insertMode": "insert",
  "editor.stickyScroll.enabled": true,
  "[html]": {
    "editor.defaultFormatter": "vscode.html-language-features"
  },

  // Security Settings
  "security.workspace.trust.untrustedFiles": "open",
  "security.allowedUNCHosts": ["wsl$"],

  // File Explorer Settings
  "explorer.copyRelativePathSeparator": "/",
  "explorer.confirmDelete": false,

  // Git and GitHub Settings
  "git.openRepositoryInParentFolders": "always",
  "githubPullRequests.fileListLayout": "tree",
  "githubPullRequests.pullBranch": "never",
  "gitlens.views.branches.files.layout": "list",
  "gitlens.views.commits.files.layout": "tree",
  "gitlens.views.remotes.branches.layout": "list",
  "gitlens.views.contributors.files.layout": "list",
  "gitlens.views.contributors.showAllBranches": true,

  "sonarlint.focusOnNewCode": true,

  // Notebook Settings
  "notebook.stickyScroll.enabled": true,

  // Diff Editor Settings
  "diffEditor.ignoreTrimWhitespace": false,

  // Remote Development Settings
  "remote.autoForwardPortsSource": "hybrid",

  // Extension Specific Settings
  "extensions.experimental.affinity": {
    "asvetliakov.vscode-neovim": 1
  },
  "vscode-neovim.neovimInitVimPaths.linux": "$HOME/.config/nvim/init.vim",
  "vscode-neovim.useWSL": true,
  "vscode-neovim.wslDistribution": "Ubuntu-20.04",
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  }
}
